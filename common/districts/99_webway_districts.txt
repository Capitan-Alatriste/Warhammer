district_low_commorragh = {
	base_buildtime = 600
	is_capped_by_modifier = no

	show_on_uncolonized = {
		uses_district_set = webway_world
	}

	potential = {
		uses_district_set = webway_world
		exists = owner
		owner = { has_country_flag = eldarian }
	}

	resources = {
		category = planet_districts
		cost = {
			minerals = 1000
		}
		upkeep = {
			energy = 10
		}
	}

	planet_modifier = {
		planet_housing_add = 10
		job_clerk_add = 10
	}

	triggered_desc = {
		text = job_clerk_effect_desc
	}

	ai_weight = {
		weight = 0
		modifier = {
			weight = 5
			free_housing < 10
		}
	}
}

district_stolen_sun = {
	base_buildtime = 600
	is_capped_by_modifier = no

	show_on_uncolonized = {
		uses_district_set = webway_world
	}

	potential = {
		uses_district_set = webway_world
		exists = owner
		owner = { has_country_flag = eldarian }
	}

	resources = {
		category = planet_districts
		cost = {
			minerals = 1000
		}
		upkeep = {
			energy = 10
		}
	}

	planet_modifier = {
		planet_housing_add = 10
		job_technician_add = 10
	}

	triggered_desc = {
		text = job_technician_effect_desc
	}

	ai_weight = {
		weight = 0
		modifier = {
			weight = 250
			owner = {
				has_monthly_income = {
					resource = energy
					value < 200
				}
			}
		}
	}

	ai_resource_production = {
		energy = 1
		trigger = {
			always = yes
		}
	}
}

district_high_commorragh = {
	base_buildtime = 600
	is_capped_by_modifier = no

	show_on_uncolonized = {
		uses_district_set = webway_world
	}

	potential = {
		uses_district_set = webway_world
		exists = owner
		owner = { has_country_flag = eldarian }
	}

	resources = {
		category = planet_districts
		cost = {
			minerals = 1000
		}
		upkeep = {
			energy = 10
		}
	}

	planet_modifier = {
		planet_housing_add = 10
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = darkeldar_empire }
		}
		modifier = {
			job_kabalite_warrior_add = 10
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = eldar_empire }
		}
		modifier = {
			job_soldier_add = 10
		}
	}
	
	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_country_flag = darkeldar_empire }
		}
		text = job_kabalite_warrior_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_country_flag = eldar_empire }
		}
		text = job_soldier_effect_desc
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 1
			free_jobs < 1
			owner = { used_naval_capacity_percent > 0.9	}
		}
		modifier = {
			weight = 100
			owner = { used_naval_capacity_percent > 0.8	}
		}
		modifier = {
			factor = 2
			owner = { empire_sprawl_over_cap > 0 }
		}
		modifier = {
			factor = 2
			owner = { empire_sprawl_over_cap > 10 }
		}
		modifier = {
			factor = 2
			owner = { empire_sprawl_over_cap > 20 }
		}
		modifier = {
			factor = 2
			owner = { empire_sprawl_over_cap > 40 }
		}
	}	
}

district_torture_dungeon = {
	base_buildtime = 600
	is_capped_by_modifier = no

	show_on_uncolonized = {
		uses_district_set = webway_world
	}

	potential = {
		uses_district_set = webway_world
		exists = owner
		owner = { has_country_flag = eldarian }
	}

	resources = {
		category = planet_districts
		cost = {
			minerals = 1000
		}
		upkeep = {
			energy = 10
		}
	}

	planet_modifier = {
		planet_housing_add = 10
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_country_flag = darkeldar_empire }
		}
		modifier = {
			job_haemonculus_add = 10
		}
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_country_flag = darkeldar_empire }
		}
		text = job_haemonculus_effect_desc
	}

	ai_weight = {
		weight = 0
		modifier = {
			weight = 750
			owner = {
				has_monthly_income = {
					resource = gods_favor
					value < 200
				}
				has_monthly_income = {
					resource = slaves
					value > 99
				}
			}
		}
		modifier = {
			weight = 1000
			owner = {
				has_monthly_income = {
					resource = gods_favor
					value < 0
				}
			}
		}
	}
	
	ai_resource_production = {
		gods_favor = 1
		trigger = {
			always = yes
		}
	}
}